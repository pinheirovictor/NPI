{"remainingRequest":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/src/views/mapeamento/comportamento/DinamicaComportamento.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/src/views/mapeamento/comportamento/DinamicaComportamento.vue","mtime":1580498609793},{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/css-loader/dist/cjs.js","mtime":1580303290048},{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1580303290568},{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/postcss-loader/src/index.js","mtime":1580303290344},{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/vuetify-loader/lib/loader.js","mtime":1580303290600},{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/cache-loader/dist/cjs.js","mtime":1580303289956},{"path":"/home/virginia/Documents/Nucleo de Praticas/Projetos/Vuetify2/vuetify-2-project/node_modules/vue-loader/lib/index.js","mtime":1580303290568}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NvbXBvcnRhbWVudG9zIHRoIHsKICAgIGZvbnQtc2l6ZTogMTZweDsKfQoKI2NvbXBvcnRhbWVudG9zIHRkIHsKICAgIGZvbnQtc2l6ZTogMTRweDsKfQoKLnJlbW92ZUljb24gdGFibGUgdGhlYWQgdHIgdGggaSB7CiAgICB2aXNpYmlsaXR5OiBoaWRkZW47Cn0K"},{"version":3,"sources":["DinamicaComportamento.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0dA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"DinamicaComportamento.vue","sourceRoot":"src/views/mapeamento/comportamento","sourcesContent":["<template xmlns:v-slot=\"http://www.w3.org/1999/XSL/Transform\">\n    <div>\n        <v-card-widget enableActions :title=\"'Dinâmica Gosto, Não Gosto, O Ideal Seria - ' + mapeamento.nome\" :voltar=\"'/mapeamento/' + mapeamento.id\">\n            <div slot=\"widget-content\" >\n                <v-row no-gutters>\n                    <span>{{unidade.sigla}} - {{unidade.nome}} - (Período: {{mapeamento.inicioPerComportServidor | date}}\n                            até {{mapeamento.fimPerComportServidor | date}})</span>\n                </v-row>\n                <v-row no-gutters v-if=\"!status.ativo\">\n                    <v-col>\n                        <v-alert text prominent dense type=\"warning\" dismissible icon=\"watch_later\" border=\"left\">\n                            O prazo para participação na dinâmica está esgotado. Obrigado pela sua colaboração!\n                        </v-alert>\n                    </v-col>\n                </v-row>\n                <v-row no-gutters class=\"mt-6\">\n                    <v-tabs centered icons-and-text v-model=\"comportamento.categoria\">\n                        <v-tabs-slider></v-tabs-slider>\n                        <v-tab v-for=\"i in categorias.length\" :key=\"i\" :href=\"'#'+categorias[i-1].id\" class=\"mt-3\">\n                            {{ categorias[i-1].descricao }}\n                            <v-badge :content=\"'0'\">\n                                <v-icon>{{ categorias[i-1].icone }}</v-icon>\n                            </v-badge>\n                        </v-tab>\n\n                        <v-tab-item v-for=\"i in categorias.length\" :key=\"i\" :value=\"categorias[i-1].id\" class=\"mt-6\">\n                            <v-row no-gutters v-if=\"status.ativo\">\n                                <v-col>\n                                    <v-text-field @keyup.enter=\"save\" v-model=\"comportamento.descricao\"\n                                        :label=\"editar == false ? frase : 'Edite sua resposta'\"\n                                        :id=\"categorias[i-1].id\" :disabled=\"!status.ativo\" required>\n                                    </v-text-field>\n                                </v-col>\n                            </v-row>\n                            <v-row no-gutters v-if=\"status.ativo\">\n                                <v-spacer></v-spacer>\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <div class=\"right mr-2\" v-on=\"on\">\n                                            <v-btn color= \"primary\"\n                                            :disabled=\"comportamento.descricao == ''\" depressed medium @click=\"save\">\n                                            {{ cadastro }} </v-btn>\n                                        </div>\n                                    </template>\n                                    <span v-html=\"cadastro == 'Adicionar' ? 'Clique no botão para adicionar um comportamento':'Clique no botão para editar o comportamento'\"></span>\n                                </v-tooltip>\n                                <v-tooltip bottom>\n                                    <template v-slot:activator=\"{ on }\">\n                                        <div class=\"\" v-on=\"on\">\n                                            <v-btn color=\"primary\" :disabled=\"comportamento.descricao == ''\" @click=\"clearFields()\" outlined>Cancelar</v-btn>\n                                        </div>\n                                    </template>\n                                    <span>Clique no botão para cancelar a operação</span>\n                                </v-tooltip>\n                            </v-row>\n                            <v-row no-gutters>\n                                <v-col>\n                                    <v-data-table :items=\"comportamentos\" :headers=\"headers\" class=\"elevation-1 mt-4\">\n                                        <template v-slot:item.acoes=\"{ item }\">\n                                            <v-tooltip bottom>\n                                                <template v-slot:activator=\"{ on }\">\n                                                    <v-btn v-on=\"on\" fab outlined small color=\"error\" v-if=\"mapeamento.periodoCadastroComportamentos\"\n                                                           @click=\"confirmDeleteItem(item)\" class=\"float-right\">\n                                                        <v-icon>delete</v-icon>\n                                                    </v-btn>\n                                                </template>\n                                                <span>Clique no botão para excluir o comportamento</span>\n                                            </v-tooltip>\n                                            <v-tooltip bottom>\n                                                <template v-slot:activator=\"{ on }\">\n                                                    <v-spacer></v-spacer>\n                                                    <v-btn v-on=\"on\" fab outlined small color=\"secondary\" v-if=\"mapeamento.periodoCadastroComportamentos\"\n                                                           @click=\"editItem(item)\" class=\"float-right mr-2\">\n                                                        <v-icon>edit</v-icon>\n                                                    </v-btn>\n                                                </template>\n                                                <span>Clique no botão para editar o comportamento</span>\n                                            </v-tooltip>\n                                        </template>\n                                    </v-data-table>\n                                </v-col>\n                            </v-row>\n                        </v-tab-item>\n                    </v-tabs>\n                    <v-row justify=\"end\" no-gutters v-if=\"mapeamento.periodoCadastroComportamentos\" class=\"text-lg-right mt-4\">\n                         <v-tooltip bottom>\n                             <template v-slot:activator=\"{ on }\">\n                                 <v-btn v-on=\"on\" class=\"primary\" :disabled=\"status.total == 0\" @click=\"toogleDialogAgradecimento()\">Finalizar</v-btn>\n                            </template>\n                            <span>Clique no botão para finalizar a Dinâmica Comportamental</span>\n                        </v-tooltip>\n                    </v-row>\n                </v-row>\n            </div>\n        </v-card-widget>\n\n        <dialog-remove\n            v-if=\"dialogs.dialogRemove.visible\"\n            :dialogVisible=\"dialogs.dialogRemove.visible\"\n            :confirmAction=\"deleteItem\"\n            :toogleVisible=\"toogleDialogRemove\"\n            descricao=\"Você realmente deseja excluir esse comportamento?\"\n        ></dialog-remove>\n\n        <dialog-agradecimento\n            :dialogVisible=\"dialogs.dialogAgradecimento.visible\"\n            :toogleVisible=\"toogleDialogAgradecimento\"\n            descricao=\"Agradecemos pela sua colaboração!\n            Você ainda poderá participar da Dinâmica até o período estabecido.\"\n            :id=\"mapeamento.id\"\n            urlRedirecionamento=\"/mapeamento/\">\n        </dialog-agradecimento>\n\n        <competencias-intro\n            v-if=\"dialogs.dialogmodalIntro.visible\"\n            :dialogVisible=\"dialogs.dialogmodalIntro.visible\"\n            :toogleVisible=\"toogleCompetenciaIntro\"\n            :abaAtual=\"comportamento.categoria\"\n        >\n        </competencias-intro>\n\n        <div v-show=\"mapeamento.periodoCadastroComportamentos\" class=\"text-lg-right mt-4\">\n            <v-tooltip left>\n                <template v-slot:activator=\"{ on }\">\n                    <v-btn v-on=\"on\" bottom floating fixed right fab dark color=\"secondary\" @click=\"toogleCompetenciaIntro()\">\n                        <v-icon>help</v-icon>\n                    </v-btn>\n                </template>\n                <span>Em caso de dúvidas, clique aqui</span>\n            </v-tooltip>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {setTimeout} from \"timers\";\n    import DialogRemove from \"@/components/DialogRemove\";\n    import CompetenciasIntro from \"@/components/CompetenciasIntro\";\n    import DialogAgradecimento from \"@/components/DialogAgradecimento\";\n    import PageTitle from \"@/components/core/PageTitle\";\n    import AppSnackbar from \"@/components/core/AppSnackbar\";\n    import VCardWidget from \"@/components/VWidget\";\n\n    import {RepositoryFactory} from \"@/repositories/RepositoryFactory\";\n    const unidadesRepository = RepositoryFactory.get(\"unidades\");\n    const mapeamentosRepository = RepositoryFactory.get(\"mapeamentos\");\n    const comportamentosRepository = RepositoryFactory.get(\"comportamentos\");\n\n    export default {\n        props: ['mapeamentoId'],\n\n        components: {\n            DialogRemove,\n            CompetenciasIntro,\n            DialogAgradecimento,\n            PageTitle,\n            AppSnackbar,\n            VCardWidget\n        },\n\n        data: () => ({\n            snackbar:{\n                visibilidade: false,\n                cor: \"success\",\n                texto: \"\"\n            },\n            dialogs: {\n                dialogRemove: {visible: false},\n                dialogInfo: {visible: false},\n                dialogmodalIntro: {visible: false},\n                dialogAgradecimento:{visible:false}\n            },\n            headers: [\n                {text: \"Comportamentos\", value: \"descricao\",sortable: false},\n                {sortable: false, value: \"acoes\"}\n            ],\n            comportamento: {\n                id: null,\n                descricao: \"\",\n                categoria: \"\"\n            },\n            pagination: {\n                rowsPerPage: 10,\n            },\n            categorias: [\n                {\n                    id: \"GOSTO\",\n                    descricao: \"[1] Gosto\",\n                    icone: \"thumb_up\",\n                    frases: {\n                        vazio: \"Há algo que goste no seu ambiente de trabalho?\",\n                        preenchido:\n                            \"Há algo mais que goste no seu ambiente de trabalho que queira dizer?\"\n                    },\n                    quant: 0\n                },\n                {\n                    id: \"NAO_GOSTO\",\n                    descricao: \"[2] Não gosto\",\n                    icone: \"thumb_down\",\n                    frases: {\n                        vazio: \"Há algo que não goste no seu ambiente de trabalho?\",\n                        preenchido:\n                            \"Há algo mais que não goste no seu ambiente de trabalho?\"\n                    },\n                    quant: 0\n                },\n                {\n                    id: \"IDEAL\",\n                    descricao: \"[3] O Ideal seria\",\n                    icone: \"check_circle\",\n                    frases: {\n                        vazio: \"Há algo que ache ser o ideal no seu ambiente de trabalho?\",\n                        preenchido:\n                            \" Há algo mais que ache ser o ideal no seu ambiente de trabalho?\"\n                    },\n                    quant: 0\n                }\n            ],\n            comportamentos: [],\n            frase: null,\n            editar: false,\n            unidade: {},\n            mapeamento: {},\n            status: {\"ativo\": true, \"total\": -1},\n            cadastro: \"Adicionar\",\n            showDialog: true\n        }),\n\n        created() {\n            this.initialize();\n        },\n\n        mounted() {\n            document.addEventListener(\"keyup\", this.keyboardEvent);\n        },\n\n        watch: {\n            \"comportamento.categoria\": function () {\n                this.clearFields();\n                this.loadComportamentos();\n            }\n        },\n\n        methods: {\n            initialize() {\n                this.loadMapeamento();\n                this.loadUnidade();\n                \n            },\n\n            loadMapeamento() {\n                mapeamentosRepository.get(this.mapeamentoId)\n                    .then(res => {\n                        this.mapeamento = res.data;\n\n                        if (this.mapeamento !== null) {\n                            this.getStatus();\n                            this.loadComportamentos();\n                        }\n\n                    })\n                    .catch(console.error);\n            },\n\n            loadUnidade() {\n                unidadesRepository.getByUsuario()\n                    .then(res => {\n                        this.unidade = res.data;\n                    })\n                    .catch(console.error);\n            },\n\n            getStatus() {\n                if(this.mapeamento.id) {\n                    comportamentosRepository.getStatus(this.mapeamento.id)\n                        .then(res => {\n                            this.status = res.data;\n\n                            if (this.status.total === 0 && this.showDialog && this.mapeamento.periodoCadastroComportamentos) {\n                                \n                                this.toogleCompetenciaIntro();\n                            }\n\n                        })\n                        .catch(console.error);\n                }\n            },\n\n            loadComportamentos() {\n                if(this.mapeamento.id) {\n                    comportamentosRepository.getAll(this.mapeamento.id)\n                        .then(res => {\n                            this.categorias[0].quant = res.data.GOSTO.length;\n                            this.categorias[1].quant = res.data.NAO_GOSTO.length;\n                            this.categorias[2].quant = res.data.IDEAL.length;\n\n                            if (this.comportamento.categoria === \"GOSTO\") {\n                                this.comportamentos = res.data.GOSTO;\n                            } else if (this.comportamento.categoria === \"NAO_GOSTO\") {\n                                this.comportamentos = res.data.NAO_GOSTO;\n                            } else if (this.comportamento.categoria === \"IDEAL\") {\n                                this.comportamentos = res.data.IDEAL;\n                            }\n\n                            this.loadText();\n                            this.ordenar();\n\n                        })\n                        .catch(console.error);\n                }\n            },\n\n            loadText() {\n                const index = this.categorias.findIndex(\n                    c => c.id === this.comportamento.categoria\n                );\n\n                if (this.comportamentos.length === 0) {\n                    this.frase = this.categorias[index].frases.vazio;\n                } else {\n                    this.frase = this.categorias[index].frases.preenchido;\n                }\n            },\n\n            save() {\n                if(this.comportamento.descricao !== \"\" && this.unidade) {\n                    this.comportamento.unidade = this.unidade;\n\n                    if(this.comportamento.id) {\n                        comportamentosRepository.update(this.comportamento.id, \"CADASTRO_COMPORTAMENTOS\", this.comportamento)\n                            .then(() => {\n                                this.snackbar.cor = \"success\";\n                                this.snackbar.texto = \"Comportamento editado com sucesso!\";\n                                this.toogleSnackbar();\n                                this.loadComportamentos();\n                            })\n                            .catch(console.error);\n\n                        this.close();\n                    } else {\n                        if(this.mapeamento.id && this.comportamento) {\n                            comportamentosRepository.create(this.mapeamento.id, this.comportamento)\n                                .then(() => {\n                                    this.getStatus();\n                                    this.loadComportamentos();\n                                    this.clearFields();\n                                    this.snackbar.cor = \"success\";\n                                    this.snackbar.texto = \"Comportamento cadastrado com sucesso!\";\n                                    this.toogleSnackbar();\n                                })\n                                .catch(console.error);\n                        }\n                    }\n                } else {\n                    return null;\n                }\n                this.editar = false;\n                this.cadastro = \"Adicionar\";\n            },\n\n            editItem(item) {\n                window.scrollTo({\n                    top: 0,\n                    left: 0,\n                    behavior: 'smooth'\n                });\n                this.editar = true;\n                this.cadastro = \"Editar\";\n                this.comportamento.id = item.id;\n                this.comportamento.descricao = item.descricao;\n                document.getElementById(this.comportamento.categoria).focus();\n            },\n\n            deleteItem() {\n                if(this.comportamento.id) {\n                    comportamentosRepository.delete(this.comportamento.id)\n                        .then(() => {\n                            this.getStatus();\n                            this.loadComportamentos();\n                            this.clearFields();\n                            this.toogleDialogRemove();\n\n                            this.snackbar.cor = \"success\";\n                            this.snackbar.texto = \"Comportamento excluído com sucesso!\";\n                            this.toogleSnackbar();\n                        })\n                        .catch(console.error);\n                }\n            },\n\n            confirmDeleteItem(item) {\n                this.editar = false;\n                this.cadastro = \"Adicionar\";\n                this.clearFields();\n                this.comportamento.id = item.id;\n                this.dialogs.dialogRemove.visible = true;\n            },\n\n            inputFocus(input) {\n                setTimeout(function () {\n                    document.getElementById(input).focus();\n                }, 500);\n            },\n\n            keyboardEvent(e) {\n                if (!this.dialogs.dialogmodalIntro.visible) {\n                    if (e.srcElement.tagName === \"INPUT\")\n                        if (e.key.toLowerCase() === \"escape\")\n                            document.getElementById(this.comportamento.categoria).blur();\n                        else return;\n\n                    if (e.key === \"1\") {\n                        this.comportamento.categoria = \"GOSTO\";\n                        this.inputFocus(this.comportamento.categoria);\n                    } else if (e.key === \"2\") {\n                        this.comportamento.categoria = \"NAO_GOSTO\";\n                        this.inputFocus(this.comportamento.categoria);\n                    } else if (e.key === \"3\") {\n                        this.comportamento.categoria = \"IDEAL\";\n                        this.inputFocus(this.comportamento.categoria);\n                    }\n                }\n            },\n\n            toogleDialogRemove() {\n                this.dialogs.dialogRemove.visible = false;\n            },\n\n            toogleCompetenciaIntro() {\n                this.dialogs.dialogmodalIntro.visible = !this.dialogs.dialogmodalIntro.visible;\n\n                if(!this.dialogs.dialogmodalIntro.visible) {\n                    this.showDialog = false;\n                }\n            },\n\n            toogleDialogInfo() {\n                this.dialogs.dialogInfo.visible = !this.dialogs.dialogInfo.visible;\n            },\n            toogleDialogAgradecimento() {\n                this.dialogs.dialogAgradecimento.visible = !this.dialogs.dialogAgradecimento.visible;\n            },\n\n            toogleSnackbar() {\n                this.snackbar.visibilidade = !this.snackbar.visibilidade;\n            },\n\n            clearFields() {\n                this.comportamento.id = null;\n                this.comportamento.descricao = \"\";\n                this.editar = false;\n                this.cadastro = \"Adicionar\";\n            },\n\n            close() {\n                this.dialog = false;\n                setTimeout(() => {\n                    this.clearFields();\n                }, 300);\n            },\n            ordenar() {\n                this.comportamentos.sort((a, b) => {\n                        if(a.id > b.id) { return -1; }\n                        if(a.id < b.id) { return 1; }\n                        return 0;\n                    }\n                )\n            }\n        }\n};\n</script>\n\n<style>\n    #comportamentos th {\n        font-size: 16px;\n    }\n\n    #comportamentos td {\n        font-size: 14px;\n    }\n\n    .removeIcon table thead tr th i {\n        visibility: hidden;\n    }\n</style>\n"]}]}