{"remainingRequest":"/home/virginia/Desktop/vuetify-2-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/virginia/Desktop/vuetify-2-project/src/views/mapeamento/DashboardMapeamento.vue?vue&type=template&id=60468551&xmlns%3Av-slot=http%3A%2F%2Fwww.w3.org%2F1999%2FXSL%2FTransform&","dependencies":[{"path":"/home/virginia/Desktop/vuetify-2-project/src/views/mapeamento/DashboardMapeamento.vue","mtime":1580393986241},{"path":"/home/virginia/Desktop/vuetify-2-project/node_modules/cache-loader/dist/cjs.js","mtime":1580303289956},{"path":"/home/virginia/Desktop/vuetify-2-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1580303290568},{"path":"/home/virginia/Desktop/vuetify-2-project/node_modules/vuetify-loader/lib/loader.js","mtime":1580303290600},{"path":"/home/virginia/Desktop/vuetify-2-project/node_modules/cache-loader/dist/cjs.js","mtime":1580303289956},{"path":"/home/virginia/Desktop/vuetify-2-project/node_modules/vue-loader/lib/index.js","mtime":1580303290568}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}